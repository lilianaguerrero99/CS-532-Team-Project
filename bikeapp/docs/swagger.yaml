openapi: 3.0.0
info:
  description: Business management system for SoCal Electro Bike (SCEB) Company
  version: '1.0.0'
  title: SoCal Electro Bike API
tags:
  - name: Account
    description: Functions related to account
  - name: Inventory
    description: Functions related inventory management
  - name: Sales Reports
    description: Functions related to sakes reports
  - name: Retail Orders
    description: Functions related retail orders management
  - name: Repair Orders
    description: Functions related repair ticket system
  - name: Employee Management
    description: Functions related employee management
paths:
  '/login':
    post:
      tags:
        - Account
      summary: Lets user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: 'account2145'
                password:
                  type: string
                  example: 't$V#$Trtu4R#'
      responses:
        '201':
          description: |
            OK
            User successfully logged in.
        '401':
          description: |
            Unauthorized
            Incorrect username or password.
  '/account/changePassword':
    patch:
      tags:
        - Account
      summary: Allows the user to enter current and new password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  example: 'gerth@67gg9tt'
                newPassword:
                  type: string
                  example: 'c893g4j%^&v72'
      responses:
        '200':
          description: Password has been updated.
  '/account/changeEmail':
    patch:
      tags:
        - Account
      summary: Allows the user to enter current and new email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentEmail
                - newEmail
              properties:
                currentEmail:
                  type: string
                  example: 'vevergarden2@sdsu.edu'
                newEmail:
                  type: string
                  example: 'violet.evergarden@sdsu.edu'
      responses:
        '200':
          description: Email has been updated.
  '/account/timeSheet':
    post:
      tags:
        - Account
      summary: Records time in and out of an employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  example: 'MM/DD/YYYY'
                timeIn:
                  type: string
                  example: 'HH/MM'
                timeOut:
                  type: string
                  example: 'HH/MM'
      responses:
        '200':
          description: Time is recorded.
        '400':
          description: Invalid input.
  '/account/shiftChart':
    get:
      tags:
        - Account
      summary: Display an employee's shift chart
      responses:
        '200':
          description: |
            OK
            Returns the employee's work schedule
          content:
            application/json:
              example:
                daysOfWork: '1,2,3,4,5,6,7' #1:Mon,2:Tue...7:Sun
                startWorkHours: '8,8,8,8,8,NULL,NULL'
                endWorkHours: '4,3,4,3,4,NULL,NULL'
                totalWeeklyHours: '38'

  '/account/timeOffRequests':
    post:
      tags:
        - Account
      summary: Lets employee request for Sick Days/Holidays/PTO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requestMessage
              properties:
                requestMessage:
                  type: string
                  example: 'Dear Ms. Manager, ...'
      responses:
        '200':
          description: Request message has been sent.
  '/inventory/search':
    post:
      tags:
        - Inventory
      summary: Allows user to search for an item in inventory
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              required:
                - bikeColor
                - priceMin
                - priceMax
                - inStock
                - condition
                - make
              properties:
                bikeColor:
                  type: string
                  example: blue
                priceMin:
                  type: number
                  example: 100.50
                priceMax:
                  type: number
                  example: 250
                inStock:
                  type: boolean
                  example: true
                condition:
                  type: string
                  example: used
                make:
                  type: string
                  example: hongda
      responses:
        '200':
          description: |
            OK
            Returns a list of bikes.
          content:
            application/json:
              example:
                - bikeId: 1423786
                  make: Hongda
                  model: M125
                  color: red
                  cost: 399
                  description: bike description
                  condition: used
                - bikeId: 89763288
                  make: Suzuccki
                  model: X613
                  color: pink
                  cost: 549
                  description: other description
                  condition: new
  '/inventory/addProduct':
    post:
      tags:
        - Inventory
      summary: Lets the user add planned/actual product to database with their ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              required:
                - addStatus
                - GUID
              properties:
                addStatus:
                  type: string
                  example: 'planned'
                GUID:
                  type: string
                  example: 'c894jv72'
      responses:
        '201':
          description: Item has been added to database
  '/inventory/updateProduct':
    put:
      tags:
        - Inventory
      summary: Updates a product's status attached with employee ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - GUID
              properties:
                status:
                  type: string
                  example: 'sold'
                GUID:
                  type: string
                  example: 'c894jv72'
      responses:
        '201':
          description: Item's status has been updated
  '/order/create':
    post:
      tags:
        - Retail Orders
      summary: Changes the status on specified order number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerName
                - customerAddress
                - isPaid
                - paymentMethod
              properties:
                customerName:
                  type: string
                  example: 'Gertrude Parker'
                customerAddress:
                  type: string
                  example: '123 abc dr. San Diego, Ca 91009'
                isPaid:
                  type: boolean
                  example: true
                paymentMethod:
                  type: string
                  example: 'card'
                itemIds:
                  type: array
                  items:
                    type: integer
                  example: [900033, 100020, 367289]
      responses:
        '200':
          description: Order has been created.
  '/order/status/{orderId}':
    get:
      tags:
        - Retail Orders
      summary: Lets the user search for an order.
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: |
            OK
            Returns an order's information and status.
          content:
            application/json:
              example:
                status: 'processing'
                customerName: 'Alex Ha'
                customerAddress: '123 jonbdf drive, san diego, ca 92123'
                totalCost: '$519'
                deliveryMethod: 'express'
                estimatedArrival: '10/28/2020'
        '404':
          description: 'Order not found.'
  '/order/status/set/{orderId}':
    post:
      tags:
        - Retail Orders
      summary: Changes the status on specified order number
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - orderStatus
              properties:
                orderStatus:
                  type: string
                  example: 'shipped'
      responses:
        '200':
          description: Order status has been updated.
  '/salesReport':
    post:
      tags:
        - Sales Reports
      summary: Generates statistical summary report of inventory for a specified week, month or year
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - companyId
                - timePeriod
              properties:
                companyId:
                  type: string
                  example: '43567'
                timePeriod:
                  type: string
                  example: 'DD/MM/YYYY-DD/MM/YYYY'
      responses:
        '200':
          description: |
            OK
          content:
            application/json:
              example:
                numberOfItemsReturned: '4'
                numberOfItemsReturnedDefective: '67'
                numberOfItemsReturnedExcess: '440'
                numberOfItemsSoldInStore: '12289'
                numberOfItemsShipped: '56'
                numberOfItemsRepaired: '87'
  '/manager/addEmployee':
    post:
      tags:
        - Employee Management
      summary: Lets a manager add a new employee account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - id
                - firstName
                - lastName
                - address
                - phone
                - ssn
                - positionTitle
              properties:
                username:
                  type: string
                  example: 'seb5149028'
                password:
                  type: string
                  example: 'b4w5h67BW$%Y'
                id:
                  type: string
                  example: '5149028'
                firstName:
                  type: string
                  example: 'Spring'
                lastName:
                  type: string
                  example: 'Coldd'
                address:
                  type: string
                  example: '3589 lolow street, chula vista, ca 92471'
                phone:
                  type: number
                  example: '5149028'
                ssn:
                  type: number
                  example: '597284623'
                positionTitle:
                  type: string
                  example: 'cashier'
      responses:
        '200':
          description: 'New employee account created.'
  '/manager/updateEmployee':
    patch:
      tags:
        - Employee Management
      summary: Lets the manager to update an employee's account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - positionTitle
              properties:
                positionTitle:
                  type: string
                  example: 'technician'
      responses:
        '200':
          description: Employee's account has been updated
  '/manager/removeEmployee':
    delete:
      tags:
        - Employee Management
      summary: Lets a manager remove an employee account
      # CANNOT HAVE REQUESTBODY
      # requestBody:
      #   required: true
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         required:
      #           - id
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"